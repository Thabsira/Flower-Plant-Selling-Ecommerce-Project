
<%- include("../../views/partials/admin/header") %>

<div class="container" style="margin: 20px auto; max-width: 1200px;">
  <!-- Page Header -->
  <h2 style="text-align: center; margin-bottom: 30px;">Sales Analytics</h2>
  
  <!-- Filter Dropdown -->
  <div style="text-align: center; margin-bottom: 20px;">
    <label for="reportTypeFilter" style="margin-right: 10px; font-weight: bold;">Filter by:</label>
    <select id="reportTypeFilter" style="padding: 5px; border-radius: 10px;">
      <option value="yearly">Yearly</option>
      <option value="monthly">Monthly</option>
    <!----  <option value="weekly">Weekly</option>--->
    </select>
  </div>

  <!-- Charts Section -->
  <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px;">
    <!-- Sales Overview Chart -->
    <div class="card" style="padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); border-radius: 10px;">
      <h3 style="text-align: center; margin-bottom: 20px;">Sales Overview</h3>
      <canvas id="salesBarChart" style="max-height: 300px;"></canvas>
    </div>

    <!-- Top 10 Best Selling Products Chart -->
    <div class="card" style="padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); border-radius: 10px;">
      <h3 style="text-align: center; margin-bottom: 20px;">Top 10 Best Selling Products</h3>
      <canvas id="topSellingPieChart" style="max-height: 300px;"></canvas>
    </div>

    <!-- Top 10 Categories Chart -->
    <div class="card" style="padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); border-radius: 10px;">
      <h3 style="text-align: center; margin-bottom: 20px;">Top Categories</h3>
      <canvas id="topCategoriesPieChart" style="max-height: 300px;"></canvas>
    </div>
  </div>
</div>

<%- include("../../views/partials/admin/footer") %>





<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const ctx = document.getElementById("salesBarChart").getContext("2d");
    const reportTypeFilter = document.getElementById("reportTypeFilter");

    let salesChart;

    
    const calculateYAxisMax = (data) => {
      const maxValue = Math.max(...data); 
      return Math.ceil(maxValue / 10000) * 10000 || 10000; 
    };

    const fetchSalesData = async (reportType) => {
      try {
        const response = await fetch(`/admin/dashboard/sales-data?reportType=${reportType}`);
        const data = await response.json();

        const labels = data.map((item) => {
          if (reportType === "weekly") {
            return `Week ${item._id}`; 
          }
          return `Month ${item._id}`; 
        });
        const totalSales = data.map((item) => item.totalSales);
        const netSales = data.map((item) => item.netSales);

        const maxSales = calculateYAxisMax([...totalSales, ...netSales]); 

        if (salesChart) {
        
          salesChart.data.labels = labels;
          salesChart.data.datasets[0].data = totalSales;
          salesChart.data.datasets[1].data = netSales;

        
          salesChart.options.scales.y.min = 0; 
          salesChart.options.scales.y.max = maxSales; 
          salesChart.options.scales.y.ticks.stepSize = 10000; 
          salesChart.update();
        } else {
          salesChart = new Chart(ctx, {
            type: "bar",
            data: {
              labels: labels,
              datasets: [
                {
                  label: "Total Sales (₹)",
                  data: totalSales,
                  backgroundColor: "rgba(75, 192, 192, 0.6)",
                  borderColor: "rgba(75, 192, 192, 1)",
                  borderWidth: 1,
                },
                {
                  label: "Net Sales (₹)",
                  data: netSales,
                  backgroundColor: "rgba(255, 99, 132, 0.6)",
                  borderColor: "rgba(255, 99, 132, 1)",
                  borderWidth: 1,
                },
              ],
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              scales: {
                y: {
                  beginAtZero: true,
                  min: 0, 
                  max: maxSales, 
                  ticks: {
                    stepSize: 10000, 
                    callback: function (value) {
                      return value.toLocaleString("en-IN"); 
                    },
                  },
                },
              },
            },
          });
        }
      } catch (error) {
        console.error("Error fetching sales data:", error);
      }
    };

    
    fetchSalesData("yearly");

    
    reportTypeFilter.addEventListener("change", (e) => {
      fetchSalesData(e.target.value);
    });
  });







  document.addEventListener("DOMContentLoaded", async () => {
    const ctx = document.getElementById("topSellingPieChart").getContext("2d");
    
    const response = await fetch('/admin/dashboard/top-selling-products');
    const data = await response.json();

    const labels = data.map(item => item.productName);  
    const salesData = data.map(item => item.totalQuantitySold);  // Sales data

    new Chart(ctx, {
      type: 'pie',  
      data: {
        labels: labels,
        datasets: [{
          data: salesData,
          backgroundColor: [
            'rgba(75, 192, 192, 0.6)',  
            'rgba(255, 99, 132, 0.6)',  
            'rgba(255, 159, 64, 0.6)',  
            'rgba(153, 102, 255, 0.6)', 
            'rgba(54, 162, 235, 0.6)', 
            'rgba(255, 206, 86, 0.6)',  
            'rgba(75, 192, 192, 0.6)',  
            'rgba(255, 99, 132, 0.6)',  
            'rgba(153, 102, 255, 0.6)', 
            'rgba(54, 162, 235, 0.6)',  
          ],
          borderColor: [
            'rgba(75, 192, 192, 1)',  
            'rgba(255, 99, 132, 1)',  
            'rgba(255, 159, 64, 1)',  
            'rgba(153, 102, 255, 1)', 
            'rgba(54, 162, 235, 1)',  
            'rgba(255, 206, 86, 1)',  
            'rgba(75, 192, 192, 1)',  
            'rgba(255, 99, 132, 1)',  
            'rgba(153, 102, 255, 1)', 
            'rgba(54, 162, 235, 1)',  
          ],
          borderWidth: 1,
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'top',
          },
          tooltip: {
            callbacks: {
              label: function(tooltipItem) {
                // Format the tooltip to display product names and sales quantity
                return `${tooltipItem.label}: ${tooltipItem.raw} units sold`;
              }
            }
          }
        }
      },
    });
  });


 


      document.addEventListener("DOMContentLoaded", async () => {
    const ctx = document.getElementById("topCategoriesPieChart").getContext("2d");
    
    const response = await fetch('/admin/dashboard/top-selling-categories');
    const data = await response.json();

    const labels = data.map(item => item.categoryName);  
    const salesData = data.map(item => item.totalSales);  

  
    new Chart(ctx, {
      type: 'pie', 
      data: {
        labels: labels,
        datasets: [{
          data: salesData,
          backgroundColor: [
            'rgba(75, 192, 192, 0.6)',  
            'rgba(255, 99, 132, 0.6)',  
            'rgba(255, 159, 64, 0.6)',  
            'rgba(153, 102, 255, 0.6)', 
            'rgba(54, 162, 235, 0.6)',  
            'rgba(255, 206, 86, 0.6)',  
            'rgba(75, 192, 192, 0.6)',  
            'rgba(255, 99, 132, 0.6)',  
            'rgba(153, 102, 255, 0.6)', 
            'rgba(54, 162, 235, 0.6)',  
          ],
          borderColor: [
            'rgba(75, 192, 192, 1)',  
            'rgba(255, 99, 132, 1)',  
            'rgba(255, 159, 64, 1)',  
            'rgba(153, 102, 255, 1)', 
            'rgba(54, 162, 235, 1)',  
            'rgba(255, 206, 86, 1)',  
            'rgba(75, 192, 192, 1)',  
            'rgba(255, 99, 132, 1)',  
            'rgba(153, 102, 255, 1)', 
            'rgba(54, 162, 235, 1)',  
          ],
          borderWidth: 1,
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'top',
          },
          tooltip: {
            callbacks: {
              label: function(tooltipItem) {
              
                return `${tooltipItem.label}: ${tooltipItem.raw} units sold`;
              }
            }
          }
        }
      },
    });
  });



     



  

</script>


















































