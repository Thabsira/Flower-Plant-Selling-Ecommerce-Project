<%- include("../../views/partials/user/header") %>

<!-- Cart Page Start -->
<div class="container-fluid py-5">
    <div class="container py-5">
        <div class="table-responsive">
            <table class="table">
                <thead>
                  <tr>
                    <th scope="col">Products</th>
                    <th scope="col">Name</th>
                    <th scope="col">Price</th>
                    <th scope="col">Quantity</th>
                    <th scope="col">Total</th>
                    <th scope="col">Handle</th>
                  </tr>
                </thead>
                <tbody>
                    <!-- Loop through cart items passed from the backend -->
                    <% if (cart && cart.items.length > 0) { %>
                        <% cart.items.forEach(item => { %>
                            <!-- Adding data-product-id attribute to uniquely identify each row by productId -->
                            <tr data-product-id="<%= item.productId._id %>">
                                <th scope="row">
                                    <div class="d-flex align-items-center">
                                        <!-- Product image -->
                                        <img src="<%= item.productId.productImage[0] %>" class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;" alt="<%= item.productId.name %>">
                                    </div>
                                </th>
                                <td>
                                    <p class="mb-0 mt-4" style="color: black;"><%= item.productId.productName %></p>
                                </td>
                                <td>
                                    <p class="mb-0 mt-4">$<%= item.price.toFixed(2) %></p>
                                </td>
                                <td>
                                    <div class="input-group quantity mt-4" style="width: 100px;">
                                        <div class="input-group-btn">
                                        
                                           <button class="btn btn-sm btn-minus rounded-circle bg-light border" onclick="updateCartItem('<%= item.productId._id %>', -1)">
                                                <i class="fa fa-minus"></i>
                                            </button>
                                        </div>
                                        
                                
                                            <input type="text" class="form-control form-control-sm text-center border-0" value="<%= item.quantity %>" readonly 
    data-available-stock="<%= item.productId.availableStock %>">

                                            <button class="btn btn-sm btn-plus rounded-circle bg-light border" onclick="updateCartItem('<%= item.productId._id %>', 1)">
                                                <i class="fa fa-plus"></i>
                                            </button>

                                        </div>

                                        
                                    </div>
                                </td>
                                <td>
                                    <!-- Total price for this item with data-price attribute -->
                                 <!----  <p class="mb-0 mt-4 total-price" data-price="<%= item.price * item.quantity %>">$<%= (item.price * item.quantity).toFixed(2) %></p>--->
                                  <p class="mb-0 mt-4 total-price" data-price="<%= item.price %>">$<%= (item.price * item.quantity).toFixed(2) %></p>

                                </td>
                                <td>
                                
                                    <button class="btn btn-md rounded-circle bg-light border mt-4" onclick="removeCartItem('<%= item.productId._id %>')">
                                        <i class="fa fa-times text-danger"></i>
                                    </button>
                                </td>
                            </tr>
                        <% }) %>
                    <% } else { %>
                        <!-- If cart is empty -->
                        <tr>
                            <td colspan="6" class="text-center">Your cart is empty</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
        
        <!-- Total and Proceed to Checkout section -->
        <div class="row g-4 justify-content-end">
            <div class="col-8"></div>
            <div class="col-sm-8 col-md-7 col-lg-6 col-xl-4">
                <div class="bg-light rounded">
                    <div class="p-4">
                        <h1 class="display-6 mb-4">Cart <span class="fw-normal">Total</span></h1>
                        <div class="d-flex justify-content-between mb-4">
                            <h5 class="mb-0 me-4">Subtotal:</h5>
                            <p class="mb-0 cart-subtotal">$<%= cart.cartTotal.toFixed(2) %></p>
                        </div>
                        <div class="d-flex justify-content-between">
                            <h5 class="mb-0 me-4">Shipping</h5>
                            <div>
                                <p class="mb-0">Flat rate: $3.00</p>
                            </div>
                        </div>
                        <p class="mb-0 text-end">Shipping to your address.</p>
                    </div>
                    <div class="py-4 mb-4 border-top border-bottom d-flex justify-content-between">
                        <h5 class="mb-0 ps-4 me-4">Total</h5>
                        <p class="mb-0 pe-4 cart-total">$<%= (cart.cartTotal + 3).toFixed(2) %></p> <!-- Adding flat rate shipping -->
                    </div>
                    <button class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4" type="button" onclick="proceedToCheckout()">Proceed to Checkout</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Cart Page End -->

<%- include("../../views/partials/user/footer") %>



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // Function to update cart items
    function updateCartItem(productId, change) {
        console.log("Updating item:", productId, "Change:", change);

        fetch('/cart/update', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId, change }),
        })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(data => {
                        if (data.message === 'Insufficient stock available') {
                            // Display SweetAlert for insufficient stock
                            Swal.fire({
                                icon: 'error',
                                title: 'Insufficient stock',
                                text: 'You cannot add more items than the available stock.',
                            });

                            // Disable the plus button if stock is insufficient
                            const row = document.querySelector(`tr[data-product-id="${productId}"]`);
                            console.log( row ? 'Element found row' : 'Element not found');
                            const plusButton = row.querySelector('.btn-plus');
                            console.log( plusButton ? 'Element found plus' : 'Element not found');
                            const quantityInput = row.querySelector('input[type="text"]');
                            console.log( quantityInput  ? 'Element found quantity' : 'Element not found');
                            const availableStock = parseInt(quantityInput.getAttribute('data-available-stock'), 10);
                            const currentQuantity = parseInt(quantityInput.value, 10);

                            plusButton.disabled = currentQuantity >= availableStock;
                        }
                        throw new Error(data.message || 'Error updating cart item');
                    });
                }
                return response.json();
            })
            .then(data => {
                console.log("Response data:", data);

                const row = document.querySelector(`tr[data-product-id="${productId}"]`);
                if (!row) {
                    console.error("Row not found for product ID:", productId);
                    return;
                }

                const quantityInput = row.querySelector('input[type="text"]');
                console.log( quantityInput? 'Element found input' : 'Element not found');
                const updatedItem = data.items.find(item => item.productId.toString() === productId);
                if (updatedItem) {
                
                    quantityInput.value = updatedItem.quantity;

                    const totalPriceElement = row.querySelector('.total-price');
                    console.log( totalPriceElement? 'Element found price element' : 'Element not found');
                    if (totalPriceElement) {
                        totalPriceElement.textContent = `$${updatedItem.totalPrice.toFixed(2)}`;
                    }
                    const availableStock = parseInt(quantityInput.getAttribute('data-available-stock'), 10);
                    console.log( availableStock? 'Element found available stock' : 'Element not found');
                    const plusButton = row.querySelector('.btn-plus');
                    console.log(plusButton ? 'Element found button plus' : 'Element not found');
                    plusButton.disabled = updatedItem.quantity >= availableStock;
                }

            
                const cartSubtotalElement = document.querySelector('.cart-subtotal');
                console.log(cartSubtotalElement ? 'Element found cart subtotal' : 'Element not found');
                const cartTotalElement = document.querySelector('.cart-total');
                console.log(cartTotalElement ? 'Element found cart total' : 'Element not found');

                if (cartSubtotalElement) {
                    cartSubtotalElement.textContent = `$${data.cartTotal.toFixed(2)}`;
                }
                if (cartTotalElement) {
                    cartTotalElement.textContent = `$${(data.cartTotal + 3).toFixed(2)}`; // Flat shipping cost
                }
            })
            .catch(error => {
                console.error('Error updating cart item:', error);
            });
    }

    // Function to remove a cart item
    function removeCartItem(productId) {
        fetch(`/cart/remove/${productId}`, {
            method: 'DELETE',
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to remove cart item');
                }
                return response.json();
            })
            .then(data => {
                console.log(data);
                location.reload(); // Reload the page to reflect cart changes
            })
            .catch(error => {
                console.error('Error removing item from cart:', error);
            });
    }

    // Redirect to the checkout page
    function proceedToCheckout() {
        window.location.href = "/checkout";
    }

    // Run on page load to initialize button states
    document.addEventListener('DOMContentLoaded', () => {
        console.log('DOM fully loaded and parsed');

        // Disable plus buttons if quantity exceeds available stock
        const rows = document.querySelectorAll('tr[data-product-id]');
        rows.forEach(row => {
            const quantityInput = row.querySelector('input[type="text"]');
            const availableStock = parseInt(quantityInput.getAttribute('data-available-stock'), 10);
            const currentQuantity = parseInt(quantityInput.value, 10);
            const plusButton = row.querySelector('.btn-plus');

            // Disable the plus button if the current quantity equals or exceeds stock
            plusButton.disabled = currentQuantity >= availableStock;
        });
    });
</script>








  
  
  