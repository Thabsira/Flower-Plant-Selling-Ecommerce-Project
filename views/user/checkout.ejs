

<%- include("../../views/partials/user/header") %>

<style>
    .container, .list-group {
        font-family: 'YourFontName', sans-serif;
        font-size: 16px; /* Adjust size if needed */
        font-weight: normal;
    }
</style>

<!-- Checkout Page Start -->
<div class="container-fluid py-5">
    <div class="container py-5">
        <h1 class="mb-4">Checkout</h1>
        <form action="/checkout/place-order" method="POST" id="orderForm">
            <div class="row g-5">
                <!-- Address Selection Section -->
                <div class="col-md-12 col-lg-6 col-xl-7">
                    <h4 class="mb-4">Select Delivery Address</h4>
                    
                    <!-- Loop through saved addresses from the user profile -->
                    <div class="list-group">
                        <% if (addresses && addresses.length > 0) { %>
                            <% addresses.forEach(address => { %>
                                <div class="list-group-item list-group-item-action mb-3">
                                    <input type="radio" name="selectedAddress" value="<%= address._id %>" class="form-check-input me-3" id="address_<%= address._id %>">
                                    <div>
                                        <h5 class="fw-bold mb-1"><%= address.name %></h5>
                                        <p class="mb-0">
                                            <%= address.address %>, <%= address.city %>, <%= address.state %>, <%= address.pincode %> <br>
                                            <strong>Phone:</strong> <%= address.phone %>
                                        </p>
                                    </div>
                                </div>
                            <% }) %>
                        <% } else { %>
                            <p>No saved addresses found. Please add one below.</p>
                        <% } %>
                    </div>
                    
                    <!-- Button to Add New Address -->
                    <button class="btn btn-primary mt-3" onclick="window.location.href='/profile/address/add#addresses'">Add New Address</button>
                </div>

                <!-- Order Summary Section -->
                <div class="col-md-12 col-lg-6 col-xl-5">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">Products</th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Price</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                 
                                <% cart.items.forEach(item => { %>
                                    <tr>
                                        <th scope="row">
                                            <div class="d-flex align-items-center mt-2">
                                                <img src="<%= item.productId.productImage[0] %>" class="img-fluid rounded-circle" style="width: 90px; height: 90px;" alt="Product Image">
                                            </div>
                                        </th>
                                        <td class="py-5"><%= item.productId.productName %></td>
                                        <td class="py-5">Rs. <%= item.price.toFixed(2) %></td>
                                        <td class="py-5"><%= item.quantity %></td>
                                        <td class="py-5">Rs. <%= (item.price * item.quantity).toFixed(2) %></td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>

                    <!-- Summary Totals -->
                    <div class="bg-light rounded p-4 mt-4">
                        <div class="d-flex justify-content-between">
                            <h5>Subtotal</h5>
                            <p id="subtotal">Rs <%= (cart.items.reduce((sum, item) => sum + (item.price * item.quantity), 0)+50).toFixed(2) %></p>
                        </div>
                        <div class="d-flex justify-content-between">
                            <h5>Discount</h5>
                            <p id="discount">Rs <%=totalDiscount.toFixed(2) %></p>
                        </div>
                        <div class="d-flex justify-content-between">
                            <h5>Final Total</h5>
                            <p id="final-total">Rs <%= (finalAmount+50).toFixed(2) %></p>
                        </div>
                    </div>

                    <!-- Coupon Section -->
                    <label for="couponSelect">Select a Coupon:</label>
                    <div class="d-flex align-items-center">


                    


                        <select id="couponSelect" class="form-select me-3">
                            <option value="" selected disabled>Choose a coupon</option>
                            <% if (coupons && coupons.length > 0) { %>
                                <% coupons.forEach(coupon => { %>
                                    <option value="<%= coupon.couponCode %>" data-discount="<%= coupon.discount %>">
                                        <%= coupon.couponCode %>  <%= coupon.discount %>
                                    </option>
                                <% }) %>
                            <% } else { %>
                                <option disabled>No coupons available</option>
                            <% } %>
                        </select>
                        
                        


                        
                        <button class="btn btn-secondary" id="copyCoupon" onclick="copyCouponCode()">Copy Code</button>
                    </div>

                    <!-- Apply Coupon Section -->
                    <div class="mt-4">
                        <label for="couponCode" class="form-label">Apply Coupon</label>
                        <div class="input-group">
                            <input type="text" id="couponCode" name="couponCode" class="form-control" placeholder="Enter coupon code">
                            <button type="button" class="btn btn-outline-secondary" onclick="applyCoupon()">Apply</button>
                        </div>
                        <small id="couponMessage" class="text-danger"></small>
                    </div>

                    <div id="coupon-section">
                      <!----  <p id="applied-coupon">Coupon Applied: <span id="coupon-code-display"></span></p>--->
                        <button style="margin-top: 20px; border-radius: 6px; background-color: rgb(235, 98, 98); border-style: none; color: aliceblue;" id="remove-coupon-btn" onclick="removeCoupon()">Remove Coupon</button>
                    </div>
                    

                    <!-- Payment Methods -->
                    <div class="row g-4 text-center align-items-center justify-content-center border-bottom py-3">
                        <div class="col-12">
                         <!----   <div class="form-check text-start my-3">
                                <input type="radio" class="form-check-input bg-primary border-0" id="Transfer-1" name="paymentMethod" value="bank_transfer">
                                <label class="form-check-label" for="Transfer-1">Direct Bank Transfer</label>
                            </div>--->
                           <!----- <p class="text-start text-dark">Make your payment directly into our bank account. Please use your Order ID as the payment reference.</p>--->
                        </div>
                    </div>
                    <div class="row g-4 text-center align-items-center justify-content-center border-bottom py-3">
                        <div class="col-12">
                            <div class="form-check text-start my-3">
                                <input type="radio" class="form-check-input bg-primary border-0" id="Delivery-1" name="paymentMethod" value="cash_on_delivery">
                                <label class="form-check-label" for="Delivery-1">Cash On Delivery</label>
                            </div>
                        </div>
                    </div>
                    <div class="row g-4 text-center align-items-center justify-content-center border-bottom py-3">
                        <div class="col-12">
                         <!----   <div class="form-check text-start my-3">
                                <input type="radio" class="form-check-input bg-primary border-0" id="Paypal-1" name="paymentMethod" value="paypal">
                                <label class="form-check-label" for="Paypal-1">Paypal</label>
                            </div>--->
                        </div>
                    </div>
                    <div class="row g-4 text-center align-items-center justify-content-center border-bottom py-3">
                        <div class="col-12">
                            <div class="form-check text-start my-3">
                                <input type="radio" class="form-check-input bg-primary border-0" id="Razorpay-1" name="paymentMethod" value="razorpay">
                                <label class="form-check-label" for="Razorpay-1">Razorpay</label>
                            </div>
                        </div>
                    </div>

                    <!-- Place Order Button -->
                    <input type="hidden" name="addressId" id="addressId"/>
                    <input type="hidden" name="paymentMethod" id="paymentMethod"/>
                    <button id="place-order-btn" type="submit" class="btn border-secondary py-3 px-4 text-uppercase w-100 text-primary">Place Order</button>

                </div>
            </div>
        </form>
    </div>
</div>
<!-- Checkout Page End -->




<%- include("../../views/partials/user/footer") %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script> 

<script src="https://checkout.razorpay.com/v1/checkout.js"></script> 




<script>





/*function copyCouponCode() {
    const couponSelect = document.getElementById("couponSelect");
    const selectedCoupon = couponSelect.options[couponSelect.selectedIndex];

    if (selectedCoupon.value) {
        const couponCode = selectedCoupon.value;

        const tempInput = document.createElement("input");
        tempInput.value = couponCode; 
        document.body.appendChild(tempInput);
        

        tempInput.select();
        tempInput.setSelectionRange(0, 99999);

        document.execCommand("copy");

        document.body.removeChild(tempInput);


        alert(`${couponCode} copied to clipboard!`);
    } else {
        alert("Please select a coupon first!");
    }
}*/



function copyCouponCode() {
    const couponSelect = document.getElementById("couponSelect");
    const selectedCoupon = couponSelect.options[couponSelect.selectedIndex];

    if (selectedCoupon.value) {
        const couponCode = selectedCoupon.value;

        const tempInput = document.createElement("input");
        tempInput.value = couponCode; 
        document.body.appendChild(tempInput);

        tempInput.select();
        tempInput.setSelectionRange(0, 99999);

        document.execCommand("copy");

        document.body.removeChild(tempInput);

        // SweetAlert for success message
        Swal.fire({
            icon: 'success',
            title: 'Copied!',
            text: `${couponCode} has been copied to the clipboard!`,
            confirmButtonText: 'OK',
        });
    } else {
        // SweetAlert for error message
        Swal.fire({
            icon: 'error',
            title: 'No Coupon Selected',
            text: 'Please select a coupon first!',
            confirmButtonText: 'OK',
        });
    }
}



const couponSelect = document.getElementById('couponSelect');
const subtotalElement = document.getElementById('subtotal');
const discountElement = document.getElementById('discount');
const finalTotalElement = document.getElementById('final-total');

/*async function applyCoupon() {
    const couponCode = document.getElementById('couponCode').value;

    const response = await fetch('/apply-coupon', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ couponCode }),
    });

    const result = await response.json();
    if (response.ok) {
        document.getElementById('subtotal').innerText = `Subtotal: ${result.subtotal}`;
        document.getElementById('discount').innerText = `Discount: ${result.couponDiscount}`;
        document.getElementById('final-total').innerText = `Total: ${result.totalAfterCoupon}`;

        
        document.getElementById('finalAmount').value = result.totalAfterCoupon;
        console.log(result);
    } else {
        alert(result.message); 
    }
}*/



async function applyCoupon() {
    const couponCode = document.getElementById('couponCode').value;

    
        const response = await fetch('/apply-coupon', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ couponCode }),
        });

        const result = await response.json();

        if (response.ok) {
            // Update the displayed values
            document.getElementById('subtotal').innerText = `Subtotal: ${result.subtotal}`;
            document.getElementById('discount').innerText = `Discount: ${result.couponDiscount}`;
            document.getElementById('final-total').innerText = `Total: ${result.totalAfterCoupon}`;

            document.getElementById('finalAmount').value = result.totalAfterCoupon;

            // SweetAlert for success message
            Swal.fire({
                icon: 'success',
                title: 'Coupon Applied!',
                text: `Discount of ${result.couponDiscount} has been applied.`,
                confirmButtonText: 'OK',
            });
        } else {
            // SweetAlert for error message
            Swal.fire({
                icon: 'error',
                title: 'Invalid Coupon',
                text: result.message,
                confirmButtonText: 'OK',
            });
        }
    }






//remove coupon
async function removeCoupon() {
    const response = await fetch('/remove-coupon', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
    });

    const result = await response.json();

    if (response.ok) {
        document.getElementById('subtotal').innerText = `Subtotal: ${result.subtotal}`;
        document.getElementById('discount').innerText = `Discount: ${result.discount}`;
        document.getElementById('final-total').innerText = `Total: ${result.total}`;
        
        document.getElementById('coupon-section').style.display = 'none';
    } else {
        alert(result.message); 
    }
}

async function removeCoupon() {
    const confirmation = await Swal.fire({
        title: 'Are you sure?',
        text: 'This will remove the applied coupon.',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, remove it!',
    });

    if (confirmation.isConfirmed) {
        const response = await fetch('/remove-coupon', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
        });

        const result = await response.json();

        if (response.ok) {
            Swal.fire('Removed!', 'The coupon has been removed.', 'success');
            
            document.getElementById('subtotal').innerText = `Subtotal: ${result.subtotal}`;
            document.getElementById('discount').innerText = `Discount: ${result.discount}`;
            document.getElementById('final-total').innerText = `Total: ${result.total}`;
            document.getElementById('coupon-section').style.display = 'none';
        } else {
            Swal.fire('Error!', result.message, 'error');
        }
    }
}


    



   



const codRadioButton = document.getElementById('Delivery-1');
const totalAmountElement = document.getElementById('final-total');

codRadioButton.addEventListener('change', () => {
  const rawAmountText = totalAmountElement.innerText.trim();

  console.log("Raw Total Amount Text:", rawAmountText);

  // Step 1: Clean the amount string - Keep only numeric characters and decimal point
  const cleanedAmountText = rawAmountText.replace(/[^\d.]/g, '');

  console.log("Cleaned Total Amount Text:", cleanedAmountText);

  // Step 2: Manually check if the cleaned string is valid
  if (cleanedAmountText && !isNaN(cleanedAmountText)) {
    const numericAmount = parseFloat(cleanedAmountText);

    console.log("Parsed Total Amount:", numericAmount);

    if (numericAmount > 1000) {
      console.log('COD not available');

      Swal.fire({
        title: 'COD Not Available',
        text: 'Cash on Delivery is only available for orders below ₹1000.',
        icon: 'warning',
        confirmButtonText: 'OK'
      });

      codRadioButton.checked = false;  
    }
  } else {
    console.log('Cleaned string is invalid:', cleanedAmountText);
  }
});






















    document.addEventListener('DOMContentLoaded', function () {
        const orderForm = document.getElementById('orderForm');

        orderForm.addEventListener('submit', async (event) => {
            event.preventDefault(); 

           const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
           const selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked');

            console.log("Selected Address:", selectedAddress);
            console.log("Selected Payment Method:", selectedPaymentMethod);

           /* if (!selectedAddress || !selectedPaymentMethod) {
                Swal.fire({
                    title: 'Missing Information',
                    text: 'Please select an address and payment method to proceed.',
                    icon: 'warning',
                    confirmButtonText: 'OK'
                });
                return;
            }*/

            const addressId = selectedAddress.value;
           const paymentMethod = selectedPaymentMethod.value;

            document.getElementById('addressId').value = addressId;
            console.log("Address ID:", addressId);
            document.getElementById('paymentMethod').value = paymentMethod;

            if (paymentMethod === 'razorpay') {
                try {
                    const response = await fetch('/create-order', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ addressId })
                    });
                    console.log("razorpay order created successfully");

                    const data = await response.json();

                    console.log('data',data);

                    if (!data.success) {
                        Swal.fire({
                            title: 'Error',
                            text: 'Failed to create Razorpay order.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                        return;
                    }

                    const razorpayOptions = {
                        key: data.order.key,
                        amount: data.order.amount+50,
                        currency: "INR",
                        name: "Petal Paradise",
                        description: "Order Payment",
                        order_id: data.order.id,
                        handler: async function (paymentResponse) {
                            console.log("Processing Razorpay payment...");
                            const verifyResponse = await fetch('/verify-payment', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({
                                    razorpay_order_id: paymentResponse.razorpay_order_id,
                                    razorpay_payment_id: paymentResponse.razorpay_payment_id,
                                    razorpay_signature: paymentResponse.razorpay_signature,
                                    addressId: addressId
                                })
                            });

                            const verifyData = await verifyResponse.json();
                            console.log("Verify data:", verifyData);

                            if (verifyData.success) {
                                Swal.fire({
                                    title: 'Success',
                                    text: 'Your payment was successful!',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    window.location.href = '/orders/history';
                                });
                            } else {
                              /*  Swal.fire({
                                    title: 'Error',
                                    text: 'Payment verification failed.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });*/

                                Swal.fire({
            title: 'Payment Failed',
            text: 'Payment verification failed. Order status set to Pending.',
            icon: 'error',
            confirmButtonText: 'OK'
        }).then(() => {
            window.location.href = '/orders/history';
        });
                            }
                        },
                        prefill: {
                            name: "Your Name",
                            email: "youremail@example.com",
                            contact: "9999999999"
                        },
                        theme: {
                            color: "#F37254"
                        },
                        modal: {
        ondismiss: function () {
            Swal.fire({
                title: 'Payment Not Completed',
                text: 'You exited the payment process.',
                icon: 'warning',
                confirmButtonText: 'Go to History'
            }).then(() => {
                window.location.href = '/orders/history';
            });
        }
    }
                        
                    };

                    const razorpay = new Razorpay(razorpayOptions);
                    razorpay.open();
                    
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire({
                        title: 'Error',
                        text: 'Failed to initiate payment. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
               
            } else {
                Swal.fire({
                    title: 'Confirm Order',
                    text: 'Are you sure you want to place this order?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, Place Order',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            title: 'Order Placed!',
                            text: 'Your order has been successfully placed.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            orderForm.submit(); 
                        });
                    }
                });
            }
        });
    });




</script>








  
    
    
    
    
    

            
            












